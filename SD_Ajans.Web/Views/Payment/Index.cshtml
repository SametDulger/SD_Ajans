@model IEnumerable<SD_Ajans.Core.Entities.Payment>

@{
    ViewData["Title"] = "Ödemeler";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>Ödemeler</h2>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus"></i> Yeni Ödeme
    </a>
</div>

<div class="card">
    <div class="card-header">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h5 class="mb-0">Ödeme Listesi</h5>
            </div>
            <div class="col-md-4">
                <div class="input-group">
                    <input type="text" id="searchInput" class="form-control" placeholder="Ara...">
                    <button class="btn btn-outline-secondary" type="button" onclick="filterPayments()">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Manken</th>
                            <th>Organizasyon</th>
                            <th>Tutar</th>
                            <th>Ödeme Türü</th>
                            <th>Tarih</th>
                            <th>Durum</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var payment in Model)
                        {
                            <tr>
                                <td>
                                    @if (payment.Assignment?.Manken != null)
                                    {
                                        @($"{payment.Assignment.Manken.FirstName} {payment.Assignment.Manken.LastName}")
                                    }
                                    else
                                    {
                                        <span class="text-muted">Manken bulunamadı</span>
                                    }
                                </td>
                                <td>
                                    @if (payment.Assignment?.Organization != null)
                                    {
                                        @payment.Assignment.Organization.Name
                                    }
                                    else
                                    {
                                        <span class="text-muted">Organizasyon bulunamadı</span>
                                    }
                                </td>
                                <td>@payment.Amount.ToString("C")</td>
                                <td>
                                    @switch (payment.PaymentType)
                                    {
                                        case SD_Ajans.Core.Entities.PaymentType.Cash:
                                            <span class="badge bg-success">Nakit</span>
                                            break;
                                        case SD_Ajans.Core.Entities.PaymentType.BankTransfer:
                                            <span class="badge bg-primary">Banka Transferi</span>
                                            break;
                                        case SD_Ajans.Core.Entities.PaymentType.CreditCard:
                                            <span class="badge bg-info">Kredi Kartı</span>
                                            break;
                                    }
                                </td>
                                <td>@payment.PaymentDate.ToString("dd/MM/yyyy")</td>
                                <td>
                                    @switch (payment.Status)
                                    {
                                        case SD_Ajans.Core.Entities.PaymentStatus.Pending:
                                            <span class="badge bg-warning">Bekliyor</span>
                                            break;
                                        case SD_Ajans.Core.Entities.PaymentStatus.Completed:
                                            <span class="badge bg-success">Tamamlandı</span>
                                            break;
                                        case SD_Ajans.Core.Entities.PaymentStatus.Cancelled:
                                            <span class="badge bg-danger">İptal Edildi</span>
                                            break;
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@payment.Id" class="btn btn-sm btn-info">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@payment.Id" class="btn btn-sm btn-warning">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@payment.Id" class="btn btn-sm btn-danger">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-4">
                <i class="fas fa-money-bill-wave fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">Henüz ödeme kaydı bulunmuyor</h5>
                <p class="text-muted">İlk ödeme kaydını oluşturmak için "Yeni Ödeme" butonuna tıklayın.</p>
            </div>
        }
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-4">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h6 class="card-title">Toplam Ödeme</h6>
                        <h4>@Model.Where(p => p.Status == SD_Ajans.Core.Entities.PaymentStatus.Completed).Sum(p => p.Amount).ToString("C")</h4>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-money-bill-wave fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h6 class="card-title">Bekleyen Ödeme</h6>
                        <h4>@Model.Where(p => p.Status == SD_Ajans.Core.Entities.PaymentStatus.Pending).Sum(p => p.Amount).ToString("C")</h4>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-clock fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h6 class="card-title">Bu Ay</h6>
                        <h4>@Model.Where(p => p.PaymentDate.Month == DateTime.Now.Month && p.Status == SD_Ajans.Core.Entities.PaymentStatus.Completed).Sum(p => p.Amount).ToString("C")</h4>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-calendar-alt fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function filterPayments() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const rows = document.querySelectorAll('tbody tr');
            
            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchTerm) ? '' : 'none';
            });
        }
        
        document.getElementById('searchInput').addEventListener('keyup', filterPayments);
    </script>
} 