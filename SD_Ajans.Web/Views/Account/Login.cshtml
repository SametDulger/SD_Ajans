@model SD_Ajans.Web.Models.LoginViewModel

@{
    ViewData["Title"] = "Giriş";
}

<div class="login-container">
    <div class="container">
        <div class="row justify-content-center align-items-center min-vh-100">
            <div class="col-lg-5 col-md-7 col-sm-9">
                <div class="login-card fade-in-up">
                    <div class="text-center mb-4">
                        <div class="login-logo mb-3">
                            <i class="fas fa-star"></i>
                        </div>
                        <h2 class="fw-bold text-primary">SD Ajans</h2>
                        <p class="text-muted">Yönetim Paneli Girişi</p>
                    </div>
                    
                    <form asp-action="Login" method="post" class="login-form">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                        
                        <div class="form-floating mb-3">
                            <input asp-for="Email" class="form-control" id="emailInput" placeholder="Email" />
                            <label asp-for="Email" for="emailInput">
                                <i class="fas fa-envelope me-2"></i>Email Adresi
                            </label>
                            <span asp-validation-for="Email" class="text-danger small"></span>
                        </div>
                        
                        <div class="form-floating mb-3">
                            <input asp-for="Password" type="password" class="form-control" id="passwordInput" placeholder="Şifre" />
                            <label asp-for="Password" for="passwordInput">
                                <i class="fas fa-lock me-2"></i>Şifre
                            </label>
                            <span asp-validation-for="Password" class="text-danger small"></span>
                        </div>
                        
                        <div class="form-check mb-4">
                            <input asp-for="RememberMe" class="form-check-input" id="rememberMe" />
                            <label asp-for="RememberMe" class="form-check-label" for="rememberMe">
                                <i class="fas fa-check-circle me-2"></i>Beni Hatırla
                            </label>
                        </div>
                        
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary btn-lg login-btn">
                                <i class="fas fa-sign-in-alt me-2"></i>Giriş Yap
                            </button>
                        </div>
                    </form>
                    
                    <div class="text-center mt-4">
                        <p class="text-muted small mb-0">
                            <i class="fas fa-shield-alt me-1"></i>Güvenli bağlantı ile korunmaktadır
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .login-container {
        min-height: 100vh;
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
        position: relative;
        overflow: hidden;
    }
    
    .login-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.1"/><circle cx="10" cy="60" r="0.5" fill="white" opacity="0.1"/><circle cx="90" cy="40" r="0.5" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        pointer-events: none;
    }
    
    .login-card {
        background: white;
        border-radius: 2rem;
        padding: 3rem 2rem;
        box-shadow: var(--shadow-lg);
        position: relative;
        z-index: 1;
    }
    
    .login-logo {
        width: 80px;
        height: 80px;
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto;
        font-size: 2rem;
        color: white;
        box-shadow: var(--shadow-md);
    }
    
    .form-floating > .form-control {
        border-radius: 1rem;
        border: 2px solid var(--border-color);
        padding: 1rem 0.75rem;
        height: auto;
        font-size: 1rem;
    }
    
    .form-floating > .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.2rem rgba(99, 102, 241, 0.25);
    }
    
    .form-floating > label {
        padding: 1rem 0.75rem;
        color: var(--secondary-color);
    }
    
    .form-check-input:checked {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }
    
    .form-check-label {
        color: var(--secondary-color);
        font-weight: 500;
    }
    
    .login-btn {
        border-radius: 1rem;
        padding: 1rem;
        font-weight: 600;
        font-size: 1.1rem;
        transition: all 0.3s ease;
    }
    
    .login-btn:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-md);
    }
    
    .fade-in-up {
        animation: fadeInUp 0.8s ease-out;
    }
    
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    @@media (max-width: 768px) {
        .login-card {
            padding: 2rem 1.5rem;
            margin: 1rem;
        }
        
        .login-logo {
            width: 60px;
            height: 60px;
            font-size: 1.5rem;
        }
    }
</style>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Form validation enhancement
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('.login-form');
            const inputs = form.querySelectorAll('.form-control');
            
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.classList.add('focused');
                });
                
                input.addEventListener('blur', function() {
                    if (!this.value) {
                        this.parentElement.classList.remove('focused');
                    }
                });
            });
            
            // Auto-focus on email input
            document.getElementById('emailInput').focus();
        });
    </script>
} 